language: cpp
cache: apt
env:
  matrix:
   # =======================================================
   # RELEASE Build
   # =======================================================
     - CMAKE_CXX_COMPILER=g++-5
       CMAKE_BUILD_TYPE=RELEASE
       CONSERVE_MEMORY=ON

before_install:
   - until sudo add-apt-repository -y ppa:saiarcot895/chromium-beta; do echo retry; done
   - until sudo apt-get -qq update; do echo retry; done
   - until sudo add-apt-repository --yes ppa:ubuntu-toolchain-r/test; do echo retry; done
   - sudo apt-add-repository --yes ppa:smspillaz/cmake-2.8.12
   - sudo apt-get --yes update
   - sudo apt-get install --yes cmake cmake-data
   - sudo apt-get install --yes python-pip
   - sudo pip install lit
   - sudo pip install OutputCheck
   - sudo easy_install networkx
   - sudo apt-get install libgraphviz-dev
   - sudo easy_install pygraphviz

install:
  - until sudo apt-get -qq update; do echo retry; done
  - until sudo apt-get -qq install libstdc++5; do echo retry; done
  - if [[ $CMAKE_CXX_COMPILER == g++-5 ]]; then until sudo apt-get -qq install g++-5; do echo retry; done fi
  - wget --no-verbose --output-document=boost-trunk.tar.bz2 http://sourceforge.net/projects/boost/files/boost/1.55.0/boost_1_55_0.tar.bz2/download
  - export BOOST_ROOT="$TRAVIS_BUILD_DIR/../boost-trunk"
  - export CMAKE_MODULE_PATH="$BOOST_ROOT"
  - mkdir -p $BOOST_ROOT
  - tar jxf boost-trunk.tar.bz2 --strip-components=1 -C $BOOST_ROOT
  - (cd $BOOST_ROOT; ./bootstrap.sh --with-libraries=date_time,filesystem,system,iostreams,regex,python,test)
  - (cd $BOOST_ROOT; ./b2 threading=multi --prefix=$BOOST_ROOT -d0 install)
  - cd ..
  - export LZ="$TRAVIS_BUILD_DIR/../lz"
  - mkdir -p $LZ
  - wget --output-document=llvm.tar.gz https://www.dropbox.com/s/r0upppf66zbp6xk/llvm-3.6.tar.gz?dl=0;
  - tar xvf llvm.tar.gz -C $LZ;
  - ls $LZ

script:
  - cd sea-dsa
  - mkdir -p build
  - cd build
  - mv $LZ/run run
  - /usr/bin/cmake -DBOOST_ROOT=$BOOST_ROOT -DLLVM_DIR=$(pwd)/run/share/llvm/cmake -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE} -DCMAKE_CXX_COMPILER=${CMAKE_CXX_COMPILER} -DCMAKE_PROGRAM_PATH=/usr/bin  -DCMAKE_INSTALL_PREFIX=run ../;
  ## XXX: not required since LLVM already found
  #- /usr/bin/cmake --build .
  - /usr/bin/cmake --build . --target install
  - /usr/bin/cmake --build . --target test-dsa

notifications:
   slack: seahornteam:NAUqZmZHFFviPH4ktQbJXgKu
   email:
     recipients:
      - seahorn-build@googlegroups.com
     on_success: always
     on_failure: always
